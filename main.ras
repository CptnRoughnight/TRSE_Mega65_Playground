program HelloWorld;
@use "mega65"
@use "palettes"
@use "DMA"
@use "RRB"
 
 @use "memory"
 
var
	blah : byte = 1;
	test : byte  = 0;
	
	x,y : integer;
	addr : integer;
	
	sprAddr : array[25] of integer at $3000;
	sprPos : array[25] of integer = ( 10,200,30,66,70,120,2,90,55,250,10,200,30,66,70,120,2,90,55,250,10,200,30,66,70 );
	

	
procedure waitKey();
begin
	asm("
	waitforkey:
		lda $D610
		beq waitforkey
	");	
end;

// set tiles 2048 to 256 colors 
procedure initTiles();
var	col : byte;
addr1:integer;
begin
	addr1 := $0000;
	col := 0;
	for x := 0 to 255 do
	begin
		DMA::lfill($00,$02,addr1,col,64);
		col := col + 1;
		addr1 := addr1 + 64;
	end;	
end;

procedure demoDrawTiles();
var t : integer;
x1,y1 : byte;
begin
	t := 2048;
	for y1 := 0 to 24 do
	begin
		for x1 := 0 to 40 do
		begin

			addr := $0000 + (x1*2) + (y1*mega65::LogicalRowSize);
			DMA::lpoke($00,$05,addr,DMA::loByte(t));
			DMA::lpoke($00,$05,addr+1,DMA::hiByte(t));
			t := t + 1;
			if (t > 2048+255) then
				t := 2048;
		end;
	end;
	waitKey();
end;

procedure poke16(pa,pb : integer;val:integer);
begin
	//     zphi zplo
	//     xxxx xxxx
	// bsp$0FF8 0000	- color ram
	Memory::zpLo := pb;  
	Memory::zpHi := pa; // 32 bit addressing through pointers
	Memory::Poke32(0,DMA::loByte(val));
	Memory::Poke32(1,DMA::hiByte(val));
end;

procedure demoRRB();
var x2,y2 : byte;
	ch : byte;
	rampos : integer;
	rrbrunning : byte = 1;

begin
	// Update RowSize
	mega65::RowSize := 45;
	mega65::SetRowSize();
	// populate layer 0 with chars
	ch := 0;
	for y2 := 0 to 24 do
	begin
		for	x2 := 0 to 39 do
		begin
			mega65::printCharFCM(ch,6,x2,y2);
			ch := ch + 1;
		end;
		// Add GOTOX|TRANSPARENT into colorram
		rampos := y2 * mega65::LogicalRowSize + 40*2;
		//DMA::lpoke($ff,$08,rampos,RRB::GOTOX|RRB::TRANSPARENT);
		poke16($0FF8,rampos,RRB::GOTOX|RRB::TRANSPARENT);
		// save ram position 	
		sprAddr[y2] := rampos;
		// New Position of "Sprite"
		poke16($0005,rampos,sprPos[y2]);
		// Draw new Char - "Sprite"
		rampos := rampos + 2;
		poke16($0ff8,rampos,1024);
		poke16($0005,rampos,2);
		// RRB GotoX 320
		rampos := rampos + 2;
		poke16($0ff8,rampos,RRB::GOTOX);
		poke16($0005,rampos,320);
		// RRB GotoX 320 - finish char
		rampos := rampos + 2;
		poke16($0ff8,rampos,$00);
		poke16($0005,rampos,$00);
		
	end;
	while(rrbrunning) do
	begin
		waitforraster(255);
		for y2:=0 to 24 do
		begin
			sprPos[y2]:=sprPos[y2]+1;
			if (sprPos[y2]>320)then
				sprPos[y2] := 0;
			poke16($0005,sprAddr[y2],sprPos[y2]);
		end;
	end;
end;

begin
	mega65::setFCM();
	mega65::relocateScreen($05,$0000);

	DMA::lfill($00,$05,$0000,$00,4000);
	DMA::lfill($ff,$08,$0000,$00,4000);
	DMA::lfill($00,$02,$0000,$00,16384);
	
	// uncomment next 4 lines for tile demo_LogicalRowSize
	// mega65::SetRowSize();
	// palettes::InitPalette();			// for chars (demoRRB) the palette doesnt fit, as the first 16 colors a grey shades
	// initTiles();
	// demoDrawTiles();
	
	
	// RRB Demo
	demoRRB();

	
end.